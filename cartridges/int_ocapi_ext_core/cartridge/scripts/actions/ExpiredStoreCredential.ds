/**
* Â©2013-2018 salesforce.com, inc. All rights reserved.
*
*  Wrapper to update Store credential details
*
*  @output LoginStatus : Boolean For setting error status.
*
*/

importPackage( dw.system );
importPackage( dw.catalog);

importScript("int_ocapi_ext_core:api/services/StoreCredentialsCO.ds");

function execute( args : PipelineDictionary ) : Number {
    var result = expiredStoreCredential();
    if (result.LoginStatus) {
        return PIPELET_NEXT;
    }
    else{
        return PIPELET_ERROR;
    }
}

/**
 * expiredStoreCredential - expires the store credentials
 */
function expiredStoreCredential() {
    var result={};
    try{
        var log : Log = Logger.getLogger("instore-audit-trail");
        log.info("expiredStoreCredential: entering script");
        var storeId : string = session.custom.storeId;
        session.custom.storeId = null;
    
        var storeCredentials = new StoreCredentials();
        storeCredentials.badcredentials(storeId);
        var LoginStatus = false;
    
        log.info("expiredStoreCredential: exiting script without error");
        return {LoginStatus : LoginStatus};
    } catch(ex) {
        var ErrorMessage = ex.stringify();
        return {ErrorMessage : ErrorMessage};
    }
}

module.exports = {
    expiredStoreCredential : expiredStoreCredential
};
