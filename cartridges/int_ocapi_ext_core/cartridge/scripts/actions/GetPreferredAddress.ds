/**
* Â©2013-2018 salesforce.com, inc. All rights reserved.
*
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input CurrentSession : dw.system.Session 
*   @input Customer : dw.customer.Customer 
*   @output Output : Object
*
*/
importPackage( dw.system );
importPackage( dw.customer );
importScript("api/EAStatus.ds");

function execute( args : PipelineDictionary ) : Number {
    var result = getPrefAddress(args.CurrentSession,args.Customer);
    if (result.JSONResponse) {
        args.JSONResponse = result.JSONResponse;
        return PIPELET_NEXT;
    }
}

/**
 * getPrefAddress - return the preferred address ID for the customer
 * @param currentSession
 * @param customer
 */
function getPrefAddress(currentSession,customer) {
    var output;
    var log : Log = Logger.getLogger("instore-audit-trail");
    log.info("GetPreferredAddress: entering script");
    var eaStatus = new EAStatus();
    if (!session.custom.agent || !('allowLOBO' in session.custom.agent) || !session.custom.agent.allowLOBO) {
        eaStatus.findMessage("EA_EMP_AUTH_4003");
        log.info("GetPreferredAddress: exiting script with EA_EMP_AUTH_4003 error");
        output = eaStatus.stringify();
    } else    if (!customer) {
        eaStatus.findMessage("EA_LOBO_404");
        log.info("GetPreferredAddress: exiting script with EA_LOBO_404 error");
        output = eaStatus.stringify();
    } else {
        log.info("GetPreferredAddress: getting preferred address for csutomer " + Customer.getID());
        
        var addressBook : AddressBook = customer.getAddressBook();
        var prefAddr : CustomerAddress = addressBook.getPreferredAddress();
        output = prefAddr ? {'httpStatus' : 200, 'addressId' : prefAddr.ID} : {'httpStatus' : 200, 'addressId' : null};
    }
    log.info("GetPreferredAddress: exiting script without error");
    return {JSONResponse : output};
}

module.exports = {
    getPrefAddress : getPrefAddress
};
