/**
* Â©2013-2018 salesforce.com, inc. All rights reserved.
*
*     Wrapper to check user authentication
*
*  @input EmployeeId : String 
*  @input Passcode : String  
*  @output authorized: Boolean
*  @output status : String
*  @output output : String
*
*/
importPackage( dw.system );
importPackage( dw.object );
importScript("api/Authorize.ds");

function execute( args : PipelineDictionary ) : Number {
    var result = checkUser(args.EmployeeId, args.Passcode);
    if (result.authorized == true) {
        args.output = result.output;
        args.authorized = result.authorized;
        return PIPELET_NEXT;
    } else if (result.status == "bad_params") {
        args.status = result.status;
        return PIPELET_ERROR;
    } else{
        args.output = result.output;
        args.status= result.status;
        args.authorized = result.authorized;
        return PIPELET_ERROR;
    }
}

/**
 * checkUser - verifies associate's credentials and authorizes to log in
 * @param employeeId
 * @param passcode
 */
function checkUser(employeeId, passcode) {
    var log : Log = Logger.getLogger("instore-audit-trail");
    log.info("checkUser: entering script");
    
    var authorize = new Authorize();
    var storeId = session.custom.storeId;
    //Verify Associate's credentials and authorization
    authorize.authorizeAndSetDataOnSession(employeeId,passcode, session.custom.storeId); //empid, passcode, store id
    
    
    if (authorize.status == authorize.STATUS_TYPE.BAD_PARAMS) {
        log.info("checkUser: exiting script with bad_params error");
        var result = {status:"bad_params"};
        return result;
    }
    
    if (authorize.httpStatus != 200) {
        var output = authorize.stringify();
        log.info("checkUser: exiting script with authorization error");
        var result = {output:output,status:authorize.status,authorized:false};
        return result;
    }
    
    //JSON output
    var output = authorize.stringify();
    var authorized = authorize.isAuthorized() ? true : false;

    log.info("checkUser: exiting script without error");
    return {output:output,authorized:authorized};
}

module.exports = {
    checkUser : checkUser
};