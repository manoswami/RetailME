/**
* Â©2013-2018 salesforce.com, inc. All rights reserved.
*
* Changes a store associate's password using the given inputs
*
*   @input CurrentSession : dw.system.Session 
*   @input employee_id : String 
*   @input new_password : String 
*   @input store_id : String 
*   @output JSONResponse : Object
*
*/
importPackage( dw.system );
importPackage( dw.object );
importPackage( dw.crypto );
importScript("int_ocapi_ext_core:api/EAStatus.ds");
importScript("int_ocapi_ext_core:api/services/StoreAssociatesCO.ds");

function execute( args : PipelineDictionary ) : Number {
    var result = changePassword(args.CurrentSession, args.employee_id, args.new_password,args.store_id);
    if (result.ErrorMessage) {
        args.JSONResponse = result.ErrorMessage;
        return PIPELET_ERROR;
    } else {
        args.JSONResponse = result.JSONResponse;
        return PIPELET_NEXT;
    }
    
}
/**
 * changePassword - Changes the password for an associate
 * @param CurrentSession
 * @param employee_id
 * @param new_password
 * @param store_id
 */
function changePassword(CurrentSession, employee_id, new_password,store_id) {
    var log : Log = Logger.getLogger("instore-audit-trail");
    log.info("ChangeAssociatePassword: entering script");
    var eaStatus = new EAStatus();
    if (!CurrentSession.custom.agent) {
        eaStatus.findMessage("EA_EMP_AUTH_4003");
        log.info("ChangeAssociatePassword: exiting script with EA_EMP_AUTH_4003 error");
        return {ErrorMessage : eaStatus.stringify()};
    }

    var permissionObj : CustomObject = CustomObjectMgr.getCustomObject("permissionGroup", CurrentSession.custom.agent.permissionGroupId);
    if (!permissionObj || !permissionObj.custom.allowAdmin) {
        eaStatus.findMessage("EA_EMP_AUTH_4003");
        log.info("ChangeAssociatePassword: exiting script with EA_EMP_AUTH_4003 error");
        ErrorMessage = eaStatus.stringify();
        return {ErrorMessage : eaStatus.stringify()};
    }

    var storeObj : CustomObject = CustomObjectMgr.getCustomObject("storeAssociates", store_id);
    var storeEmployees = storeObj.custom.associateIDs;
    if (storeEmployees.indexOf(employee_id) < 0) {
        eaStatus.findMessage("EA_EMP_AUTH_4010");
        var ErrorMessage = {'httpStatus' : 200, 'result' : false, 'fault' : eaStatus.stringify()};
        return {ErrorMessage : ErrorMessage};
    }

    var employee : CustomObject = CustomObjectMgr.getCustomObject("associates", employee_id);
    if (!employee) {
        eaStatus.findMessage("EA_EMP_AUTH_4009");
        var ErrorMessage = {'httpStatus' : 200, 'result' : false, 'fault' : eaStatus.stringify()};
        return {ErrorMessage : ErrorMessage};
    }
    
    var randomBytes:Bytes =  new SecureRandom().nextBytes(64);
    var salt = MessageDigest(MessageDigest.DIGEST_SHA_512).digest(randomBytes);
    var encryptedPassword = MessageDigest(MessageDigest.DIGEST_SHA_512).digest("" + new_password + "" + salt);
    employee.custom.hashedCode = encryptedPassword;
    employee.custom.loginAttempts = 0;
    employee.custom.isLocked = false;
    employee.custom.salt = salt;
    var JSONResponse = {'httpStatus' : 200, 'result' : true}; 
    return {JSONResponse : JSONResponse};
}

module.exports = {
    changePassword : changePassword
};
